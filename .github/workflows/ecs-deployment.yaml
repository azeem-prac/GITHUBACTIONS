name: Build image and deploy to ECS
on:
  push:
    Branches:
      - main
  workflow_dispatch:
env:
  NODE_IMAGE_NAME: ecs-node-api
  REACT_IMAGE_NAME: ecs-demo-client
  AWS_REGION: eu-central-1


jobs:
  build-image-node-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME}}/${{env.NODE_IMAGE_NAME}}
          tags: |
            latest
            v1.0.${{github.run_number}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./API-jokes
          file: ./API-jokes/Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  
  
  build-image-react-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME}}/${{env.REACT_IMAGE_NAME}}
          tags: |
            latest
            v1.0.${{github.run_number}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./react-client
          file: ./react-client/Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
   #       build-args: |
    #        VITE_API_BASE_URL=${{ VITE_API_BASE_URL }}
  deploy-to-ecs:
    runs-on: ubuntu-latest
    needs: [build-image-node-api, build-image-react-app]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      